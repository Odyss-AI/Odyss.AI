ENVIRONMENT=prod

# Verwende den internen Hostnamen `mongodb` anstelle von localhost
MONGODB_CONNECTION_STRING=mongodb://odyss:odyss1@mongodb:27017/?authSource=admin

LOCAL_DOC_PATH=/shared_data/doc

# Verwende den internen Hostnamen `text_embeddings_inference`
TEI_URL=http://text_embeddings_inference:8080

# Setze `QDRANT_HOST` auf den Hostnamen `qdrant`, der im Docker-Netzwerk erreichbar ist
QDRANT_HOST=qdrant
QDRANT_PORT=6333

# Behalte die SSH-Einstellungen unverändert, da sie vermutlich externe Server betreffen
SSH_HOST="141.75.89.10"
SSH_PORT="22"
SSH_USERNAME="oppelfe89127"
LOCAL_PORT="8093"
REMOTE_PORT="8093"
MISTRAL_API_BASE="http://127.0.0.1:8093"
LOCAL_PORT_PIXTRAL="8092"
REMOTE_PORT_PIXTRAL="8092"
PIXTRAL_API_BASE="http://127.0.0.1:8092"

# Verwende den Hostnamen `ocr` anstelle von `localhost` für die OCR-Endpunkte
NOUGAT_OCR="http://ocr:5050/ocr/nougatocr"
PADDLE_OCR="http://ocr:5050/ocr/paddleocr"
TESERACT_OCR="http://ocr:5050/ocr/tesseractocr"

OCR_ENDPOINT_SELECTION="TESERACT"

# Offen gelassen, falls es sich um externe Endpunkte handelt, sonst könnte man `llm` verwenden
OPENAI_API_KEY = "EMPTY"
OPENAI_API_BASE = "http://127.0.0.1:8092/v1"

# Falls IMAGE_TAGGER der LLM-Service ist, auf `llm` umstellen
IMAGE_TAGGER = "http://llm:5150/tag/image"
